{
	"fileTypes": [ "cs"	],
	"name": "Chunity",
	"scopeName": "source.chunity",
	"patterns": [
	    {
            "begin": "/\\*",
            "comment": "C# multiline comments",
            "beginCaptures": {
              "0": {
                "name": "punctuation.definition.comment.cs"
              }
            },
            "end": "\\*/",
            "endCaptures": {
              "0": {
                "name": "punctuation.definition.comment.cs"
              }
            },
            "name": "comment.block.cs"
        }, 
        {
            "begin": "RunCode.*@\"",
            "end": "(?<!\")\"(?!\")",
            "contentName": "meta.embedded.block.chuck",
            "beginCaptures": {
                "0": {
                    "patterns": [ { "include": "#applyCS" } ]
                }
            },
            "endCaptures": {
                "0": {
                    "patterns": [ { "include": "#applyCS" } ]
                }  
            },
            "patterns": [
                {
                    "match": "\\bglobal\\b",
                    "comment": "Chunity adds global keyword",
                    "name": "storage.modifier.class.chuck"
                },
                {
                    "match": "\\{[0-9]+\\}",
                    "comment": "highlight string format points",
                    "name": "string.format.chuck.chunity"
                },
                {
                    "begin": "\"\"",
                    "comment": "double quotes are used to escape strings in Chunity",
                    "beginCaptures": {
                      "0": {
                        "name": "punctuation.definition.string.begin.chuck"
                      }
                    },
                    "end": "\"\"",
                    "endCaptures": {
                      "0": {
                        "name": "punctuation.definition.string.end.chuck"
                      }
                    },
                    "name": "string.quoted.double.chuck",
                    "patterns": [
                      {
                        "name": "constant.character.escape.chuck",
                        "match": "\\\\."
                      }
                    ]
                },      
                { "include": "source.chuck" }
            ]
        },
        {
            "begin": "@\"",
            "comment": "C# verbatim strings not next to a RunCode call",
            "beginCaptures": {
              "0": {
                "name": "punctuation.definition.string.begin.cs"
              }
            },
            "end": "(?<!\")\"(?!\")",
            "endCaptures": {
              "0": {
                "name": "punctuation.definition.string.end.cs"
              }
            },
            "name": "string.quoted.double.cs"
        }, 
        {
            "match": ".+?(?=RunCode|@\"|/\\*)",
            "name": "meta.embedded.block.cs",
            "comment": "consume everything up to a RunCode, a verbatim string, or a multiline comment",
            "captures": {
				"0": {
					"patterns": [
                        { "include": "#applyCS" }
                    ]
				}
			}
        },
        {
            "match": ".+",
            "name": "meta.embedded.block.cs",
            "comment": "consume an entire line",
            "captures": {
				"0": {
					"patterns": [
                        { "include": "#applyCS" }
                    ]
				}
			}
        },
        { "include": "source.cs" }
	],
	"repository":
	{
	    "applyCS":
	    {
	        "name": "source.cs",
	        "match": ".*",
	        "captures": { "0": { "patterns": [{ "include": "source.cs" }] } }
	    },
	    "applyChucK":
	    {
	        "name": "meta.embedded.block.chuck",
	        "match": ".*",
	        "captures": { "0": { "patterns": [{ "include": "source.chuck" }] } }
	    }
	}
}